function data = import_old_old_ndbc_data(filename, startRow, endRow)
%IMPORTFILE1 Import numeric data from a text file as a matrix.
%   H1988 = IMPORTFILE1(FILENAME)
%   Reads data from text file FILENAME for the default selection.
%
%   H1988 = IMPORTFILE1(FILENAME, STARTROW, ENDROW)
%   Reads data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   h1988 = importfile1('41009h1988.txt', 2, 6897);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2021/11/23 11:43:56

%% Initialize variables.
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: datetimes (%{uu MM dd HH}D)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%2f%2f%2f%2f%4f%5f%5f%6f%6f%6f%4f%7f%6f%6f%6f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this code. If an error occurs for a different file, try regenerating the code from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post processing code is included. To generate code which works for unimportable data, select unimportable cells in a file and regenerate the script.
dataArray{1} = dataArray{1} + 1900;

%% Create output variable
Time = datetime(dataArray{1},dataArray{2},dataArray{3},dataArray{4}, zeros(length(dataArray{1}),1),zeros(length(dataArray{1}), 1));
data = table(dataArray{5:end-1}, 'VariableNames', {'WD','WSP','DGST','WVHT','DPD','APD','MWD','BAR','ATMP','WTMP','DEWP','VIS'});
data = addvars(data, Time, 'Before', 'WD');

% For code requiring serial dates (datenum) instead of datetime, uncomment the following line(s) below to return the imported dates as datenum(s).

% h1988.YYMMDDHh=datenum(h1988.YYMMDDHh);

